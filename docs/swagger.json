{
    "swagger": "2.0",
    "info": {
        "description": "This is a RESTful API that provides information about Star Wars movies.",
        "title": "Go Movie API",
        "contact": {},
        "version": "1.0"
    },
    "host": "gomovie-api.herokuapp.com",
    "basePath": "/api/v1",
    "paths": {
        "/movies": {
            "get": {
                "description": "Retrieves a list of movies sorted by release date, along with name, opening crawls and comment count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movie"
                ],
                "summary": "Get a list of movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MovieResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{movieId}/characters": {
            "get": {
                "description": "Returns a list of characters for the specified movie",
                "tags": [
                    "Movie"
                ],
                "summary": "Get characters for a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "[Optional] The field to sort the characters by one of name, gender, or height",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "[Optional] Use asc or desc to sort in ascending or descending order, respectively. For example, ?sort=height\u0026order=desc will sort by height in descending order, while ?sort=height\u0026order=asc will sort by height in ascending order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "[Optional] The filter criteria to apply to the characters to filter by male or female. For example, ?gender=male will filter by male characters and return only male characters and ?sort=height\u0026order=desc\u0026gender=female will filter by female characters, listing only female characters with their height in descending order",
                        "name": "gender",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CharacterResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{movieId}/comments": {
            "get": {
                "description": "Returns a list of comments for the specified movie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movie"
                ],
                "summary": "Get a list of movies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new comment for the specified movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movie"
                ],
                "summary": "Add a new comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "movieId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment request body",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/responses.AddCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.AddCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateCommentRequest": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "responses.AddCommentRequest": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "responses.AddCommentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.CreateCommentRequest"
                }
            }
        },
        "responses.CharacterResponse": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "responses.MovieResponse": {
            "type": "object",
            "properties": {
                "comment_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "opening_crawl": {
                    "type": "string"
                }
            }
        }
    }
}